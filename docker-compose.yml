version: '3'
services:
  prod-fe-mobi8-admin:
    build:
      context: ./mobi-8-admin
      dockerfile: Dockerfile
    image: 'prod-fe-mobi8-admin'
    container_name: prod-fe-mobi8-admin
    ports:
      - '3001:3000'
        #volumes:
        #- './mobi-8-admin:/app'
    networks:
      - net_local

  prod-fe-mobi8-client:
    build:
      context: ./mobi-8-client
      dockerfile: Dockerfile
    image: 'prod-fe-mobi8-client'
    container_name: prod-fe-mobi8-client
    ports:
      - '3002:3000'
    networks:
      - net_local

  proxy-nginx:
    image: nginx
    container_name: proxy-nginx
    ports:
      - '443:443'
      - '80:80'
    volumes:
      - './nginx-proxy/nginx.conf:/etc/nginx/conf.d/default.conf'
      - './nginx-proxy/certs:/etc/nginx/certs'
    networks:
      - net_local    
  
x-shared_django: &django
  build:
    context: ./mobi8-backend
    dockerfile: ./compose/production/django/Dockerfile
  image: mobi8_production_django
  restart: unless-stopped
  depends_on:
    - postgres
    - redis
  env_file:
    - ./mobi8-backend/.envs/.production/.django
    - ./mobi8-backend/.envs/.production/.postgres
  networks:
    - net_local

services:
  invoice-proxy:
    image: nginx:stable-alpine
    restart: always
    ports:
      - "88:80"
    volumes:
      - ./mobi8-backend/nginx/invoicems.conf:/etc/nginx/conf.d/default.conf
      - ./mobi8-backend:/app
      - ./mobi8-backend/nginx/conf/ssl.conf:/etc/nginx/conf/ssl.conf
      - ./mobi8-backend/certbot/certs/:/etc/nginx/certbot/certs
      - ./mobi8-backend/certbot/.well-known/acme-challenge:/etc/nginx/certbot/.well-known/acme-challenge
      - ./mobi8-backend/certbot/.well-known/pki-validation:/etc/nginx/certbot/.well-known/pki-validation
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${PROJECT_NAME}_app.rule=Host(`testms.${PROJECT_BASE_URL}`)"
      - "traefik.http.services.${PROJECT_NAME}_app.loadbalancer.server.port=80"
      - "traefik.http.middlewares.${PROJECT_NAME}_app_https.redirectscheme.scheme=https"
      - "traefik.http.routers.${PROJECT_NAME}_app.entrypoints=http"
      - "traefik.http.routers.${PROJECT_NAME}_app.middlewares=${PROJECT_NAME}_app_https@docker"
      - "traefik.http.routers.${PROJECT_NAME}_app_https.rule=Host(`testms.${PROJECT_BASE_URL}`)"
      - "traefik.http.routers.${PROJECT_NAME}_app_https.tls=true"
      - "traefik.http.routers.${PROJECT_NAME}_app_https.entrypoints=https"
      - "traefik.http.routers.${PROJECT_NAME}_app_https.tls.certresolver=le"
    networks:
      - net_local
      - net_global
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
        tag: "{{.ImageName}}|{{.Name}}|mobi8-proxy"

  app:
    <<: *django
    command: /start
    networks:
      - net_local
    volumes:
      - ./mobi8-backend/:/app:z

  postgres:
    build:
      context: ./mobi8-backend
      dockerfile: ./compose/production/postgres/Dockerfile
    image: mobi8_production_postgres
    restart: unless-stopped
    volumes:
      - ./mobi8-backend/.data/production_postgres_data:/var/lib/postgresql/data:Z
      - ./mobi8-backend/.data/production_postgres_data_backups:/backups:z
    env_file:
      - ./mobi8-backend/.envs/.production/.postgres
    networks:
      - net_local

  traefik:
    image: traefik:v2.5
    restart: unless-stopped
    command:
      - --api.insecure=true
      - --providers.docker
      - --providers.docker.exposedByDefault=false
      - --providers.docker.network=internal
      - --providers.file.directory=/etc/traefik/dynamic_conf
      - --providers.file.watch=true
      - "--entrypoints.http.address=:80"
      - "--entrypoints.https.address=:443"
      #- "--certificatesresolvers.le.acme.email=${SSL_EMAIL?Variable not set}"
      #- "--certificatesresolvers.le.acme.storage=/certificates/acme.json"
      #- "--certificatesresolvers.le.acme.tlschallenge=true"
      #- "--certificatesresolvers.le.acme.httpchallenge.entrypoint=http"
    ports:
      - "10180:80"
      - "10183:443"
      - ${TRAEFIK_PORT_DASHBOARD:-8080}:8080
    networks:
      - net_local
      - net_global
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./mobi8-backend/.data/certificates:/certificates
      - ./mobi8-backend/.data/traefik.yml:/etc/traefik/dynamic_conf/conf.yml:ro

  redis:
    image: redis:6
    restart: unless-stopped
    networks:
      - net_local
    healthcheck:
      test:
      - CMD
      - redis-cli
      - ping

  oracle-db:
    image: truevoly/oracle-12c
    volumes:
      - oracle:/u01/app/oracle/
    ports:
      - 1521:1521
      - 8081:8080
    environment:
      - WEB_CONSOLE=false
    networks:
      - net_local


networks:
  net_local:
    driver: bridge
  net_global:
    driver: bridge

volumes:
  oracle:
